name: Deploy to Server via GHCR

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install cloudflared
        run: |
          curl -LO https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: Generate SSH Config with Cloudflare Access
        env:
          SSH_HOST: ssh.distribuidauce.org
        run: |
          mkdir -p ~/.ssh
          cloudflared access ssh-config --hostname $SSH_HOST \
            | grep -v "AddKeysToAgent" \
            | grep -v "UseKeychain" > ~/.ssh/config
          chmod 600 ~/.ssh/config


      - name: Login to GHCR
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          echo "$GHCR_TOKEN" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build and Push Docker image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/boiler-template-front-group-one:latest .
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/boiler-template-front-group-one:latest

      - name: Deploy on remote server
        env:
          SSH_HOST: ssh.distribuidauce.org
          SSH_USER: soportefing
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          IMAGE_NAME: boiler-template-front-group-one
        run: |
          ssh "$SSH_USER@$SSH_HOST" << 'EOF'
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
            docker pull ghcr.io/$GHCR_USERNAME/$IMAGE_NAME:latest
            docker stop mi-app || true
            docker rm mi-app || true
            docker run -d --name mi-app -p 80:80 ghcr.io/$GHCR_USERNAME/$IMAGE_NAME:latest
            echo "ðŸš€ App desplegada correctamente"
          EOF
