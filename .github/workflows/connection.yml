name: Deploy to Server via GHCR

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install cloudflared
        run: |
          curl -LO https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: Login to GHCR
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "fernandonov21" --password-stdin

      - name: Build and Push Docker image
        run: |
          docker build -t ghcr.io/fernandonov21/boiler-template-front-group-one:latest .
          docker push ghcr.io/fernandonov21/boiler-template-front-group-one:latest

      - name: Deploy on remote server via cloudflared
        run: |
          cloudflared access ssh --hostname ssh.distribuidauce.org --command '
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "fernandonov21" --password-stdin
            docker pull ghcr.io/fernandonov21/boiler-template-front-group-one:latest
            if docker ps -a --format '{{.Names}}' | grep -q '^mi-app$'; then
              docker stop mi-app || true
              # NO borramos el contenedor para poder ver logs en caso de fallo
              # docker rm mi-app || true
            fi

            docker run -d --name mi-app -p 80:80 ghcr.io/$GHCR_USERNAME/$IMAGE_NAME:latest || true

            echo "== Logs del contenedor mi-app =="
            docker logs mi-app || echo "Contenedor no existe o no se pudo iniciar"

          '
